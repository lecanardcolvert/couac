@model Models.Business
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Supprimer une entreprise";
}

@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("Admin"))
    {
        <h1 class="border-bottom">@ViewBag.Title</h1>
        <div class="row">
            <div class="col-md">
                <form asp-action="Delete">

                    @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
                    {
                        <div class="alert alert-danger alert-dismissible fade show col-md-6" role="alert">
                            @Html.ValidationSummary(false, "")
                            <button type="button" class="close" data-dismiss="alert" aria-label="Fermer">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                    }

                    <p>Voulez-vous vraiment supprimer cette entreprise ?</p>
                    <p>
                        <b>
                            @Html.DisplayFor(model => model.Name)
                        </b>
                    </p>

                    <input type="hidden" asp-for="Id" />

                    <div class="form-group row">
                        <div class="col-md">
                            <button type="submit" class="btn btn-danger m-1">
                                <i class="fas fa-times" style="width:14px; height:16px"></i>
                                &nbsp;
                                Supprimer
                            </button>
                        </div>
                    </div>
                </form>

                <div>
                    <a asp-controller="Business" asp-action="GetBusiness" asp-route-Id="@Model.Id">
                        Retour &agrave; la fiche de l'entreprise
                    </a>
                </div>

            </div>
        </div>

    }
}
