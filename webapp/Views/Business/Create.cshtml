@model ViewModels.CreateBusinessView
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Create";
}

@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("Admin"))
    {

        <h1>Enregistrer une nouvelle entreprise</h1>
        <hr />
        <div class="row">
            <div class="col-md-4">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="@Model.business.Name" class = "control-label">Nom</label>
                        @Html.EditorFor(model => model.business.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.business.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.business.Phone" class = "control-label">T&eacute;l&eacute;phone</label>
                        @Html.EditorFor(model => model.business.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.business.Phone, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.address.CivicNumber" class="control-label">Num&eacute;ro de rue</label>
                        <input asp-for="@Model.address.CivicNumber" class="form-control" />
                        <span asp-validation-for="@Model.address.CivicNumber" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.address.Street" class="control-label">Nom de rue</label>
                        <input asp-for="@Model.address.Street" class="form-control" />
                        <span asp-validation-for="@Model.address.Street" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.address.City" class="control-label">Ville</label>
                        <input asp-for="@Model.address.City" class="form-control" />
                        <span asp-validation-for="@Model.address.City" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.address.State" class="control-label">Province</label>
                        <input asp-for="@Model.address.State" class="form-control" />
                        <span asp-validation-for="@Model.address.State" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.address.Country" class="control-label">Pays</label>
                        <input asp-for="@Model.address.Country" class="form-control" />
                        <span asp-validation-for="@Model.address.Country" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="@Model.address.PostalCode" class="control-label">Code postal</label>
                        <input asp-for="@Model.address.PostalCode" class="form-control" />
                        <span asp-validation-for="@Model.address.PostalCode" class="text-danger"></span>
                    </div>



                    <div class="form-group">
                        <input type="submit" value="Ajouter" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>

        <div>
            <a asp-action="Index">Retourner Ã  la liste</a>
        </div>

    }
}

        @section Scripts {
            @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        }